service:
  name: ${self:custom.package.name}

frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-deployment-bucket
  - serverless-plugin-warmup
  - serverless-webpack
  - serverless-offline

custom:
  package: ${file(./package.json)}
  warmup:
    default:
      enabled: false
    officeHoursWarmer:
      enabled: true
      events:
        - schedule: cron(*/10 0-7,21-23 * * 2-6 *) # SYDNEY BUSINESS HOURS
      concurrency: 10
      verbose: true
      logRetentionInDays: 14
  webpack:
    webpackConfig: webpack.config.js
    excludeRegex: \.ts|\.test.ts|\.spec.ts|\.d.ts|\.map
    keepOutputDirectory: false
    serializedCompile: true
    packager: npm
  serverless-offline:
    allowCache: true

package:
  individually: true
  exclude:
    - node_modules/aws-sdk/**

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'default'}
  region: ap-southeast-2
  timeout: 15
  memorySize: 512
  architecture: arm64
  logRetentionInDays: 30
  deploymentMethod: direct
  deploymentBucket:
    name: sls-deployment-${self:service}-${sls:stage}
    serverSideEncryption: AES256
    blockPublicAccess: true
    versioning: true
  httpApi:
    cors: true
    metrics: true
  environment:
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}

functions:
  endpoint:
    memorySize: 1024
    reservedConcurrency: 1
    handler: src/main.handler
    events:
      - httpApi:
          path: /slack/events
          method: post

  ## See the docs: https://www.serverless.com/examples/aws-node-scheduled-cron
  # example-job:
  #   handler: src/jobs/example.job
  #   events:
  #     - schedule: cron(0/2 * ? * MON-FRI *)
